<Window x:Class="Monitor.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:charts="clr-namespace:Monitor.ViewModel.Charts"
        xmlns:charts1="clr-namespace:Monitor.View.Charts"
        xmlns:grids="clr-namespace:Monitor.ViewModel.Grids"
        xmlns:panels="clr-namespace:Monitor.View.Panels"
        xmlns:sessions="clr-namespace:Monitor.Model.Sessions"
        mc:Ignorable="d"
        Background="{StaticResource WindowBackgroundBrush}"
        Foreground="{StaticResource ForegroundBrush}"
        DataContext="{Binding MainWindow, Source={StaticResource Locator}}"
        Loaded="MainWindow_OnLoaded"
        WindowStartupLocation="CenterOwner"
        Drop="MainWindow_OnDrop"
        DragOver="MainWindow_OnDragOver"
        AllowDrop="true"
        Title="LEAN Algorithm Monitor">
    
    <Window.InputBindings>
        <KeyBinding Command="{Binding ExitCommand}" Key="F4" Modifiers="Alt"/>
        <KeyBinding Command="{Binding OpenSessionCommand}" Key="O" Modifiers="Control"/>
    </Window.InputBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="24"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" IsMainMenu="True">
            <MenuItem Header="_File">
                <MenuItem Header="_Open..." Command="{Binding OpenSessionCommand}" InputGestureText="Ctrl+O"/>
                <Separator/>
                <MenuItem Header="_Close" Command="{Binding CloseCommand}"/>
                <Separator/>
                <MenuItem Header="_Export..." Command="{Binding ExportCommand}"/>
                <Separator/>
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="_Session" IsEnabled="{Binding IsSessionActive}">
                <MenuItem Header="_Connect" Command="{Binding ConnectCommand}"/>
                <MenuItem Header="_Disconnect" Command="{Binding DisconnectCommand}"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_Charting documentation..." Click="BrowseChartingDocumentationMenuItem_OnClick"/>
                <Separator/>
                <MenuItem Header="_Monitor GitHub project..." Click="BrowseMonitorGithubMenuItem_OnClick"/>
                <MenuItem Header="_LEAN Engine GitHub project..." Click="BrowseLeanGithubMenuItem_OnClick"/>
                <Separator/>
                <MenuItem Header="_About..." Click="ShowAboutButton_OnClick"/>
            </MenuItem>
        </Menu>

        <xcad:DockingManager x:Name="DockingManager" Grid.Row="1" DocumentsSource="{Binding Charts}" BorderThickness="0">

            <xcad:DockingManager.Resources>

                <DataTemplate DataType="{x:Type charts:ChartViewModel}">
                    <charts1:ChartPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type grids:GridPanelViewModel}">
                    <charts1:GridPanel/>
                </DataTemplate>

            </xcad:DockingManager.Resources>
            
            <xcad:DockingManager.LayoutItemContainerStyle>
                <Style TargetType="{x:Type xcad:LayoutItem}">
                    <Setter Property="Title" Value="{Binding Model.Title}"></Setter>
                    <Setter Property="CanClose" Value="{Binding Model.CanClose}"></Setter>
                    <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"></Setter>
                </Style>
            </xcad:DockingManager.LayoutItemContainerStyle>

            <xcad:LayoutRoot>
                <xcad:LayoutPanel Orientation="Vertical">

                    <xcad:LayoutPanel Orientation="Horizontal">

                        <xcad:LayoutAnchorablePaneGroup DockWidth="300" Orientation="Vertical">

                            <xcad:LayoutAnchorablePane DockHeight="200">

                                <xcad:LayoutAnchorable CanClose="False" CanHide="False" Title="Runtime Statistics">
                                    <panels:RuntimeStatisticsPanel/>
                                </xcad:LayoutAnchorable>

                            </xcad:LayoutAnchorablePane>

                            <xcad:LayoutAnchorablePane>

                                <xcad:LayoutAnchorable CanClose="False" CanHide="False" Title="Overall Statistics">
                                    <panels:StatisticsPanel/>
                                </xcad:LayoutAnchorable>

                            </xcad:LayoutAnchorablePane>

                        </xcad:LayoutAnchorablePaneGroup>

                        <xcad:LayoutDocumentPaneGroup Orientation="Horizontal">
                            <xcad:LayoutDocumentPane>
                            </xcad:LayoutDocumentPane>
                        </xcad:LayoutDocumentPaneGroup>

                    </xcad:LayoutPanel>

                    <xcad:LayoutAnchorablePaneGroup DockHeight="200" Orientation="Horizontal">

                        <xcad:LayoutAnchorablePane>

                            <xcad:LayoutAnchorable CanClose="False" CanHide="False" Title="Trades">
                                <panels:TradesPanel/>
                            </xcad:LayoutAnchorable>

                            <xcad:LayoutAnchorable CanClose="False" CanHide="False" Title="Profit &amp; Loss">
                                <panels:ProfitLossPanel/>
                            </xcad:LayoutAnchorable>

                            <!-- TODO: Fix the rolling statistics -->
                            <!--<xcad:LayoutAnchorable x:Name="RollingStatisticsPane" CanClose="False" CanHide="False" Title="Rolling Statistics">
                                <view:RollingStatisticsPanel/>
                            </xcad:LayoutAnchorable>-->

                            <xcad:LayoutAnchorable CanClose="False" CanHide="False" Title="Log">
                                <panels:LogPanel/>
                            </xcad:LayoutAnchorable>

                        </xcad:LayoutAnchorablePane>

                    </xcad:LayoutAnchorablePaneGroup>

                </xcad:LayoutPanel>
            </xcad:LayoutRoot>

        </xcad:DockingManager>

        <StatusBar DataContext="{Binding StatusViewModel}" Grid.Row="2" Height="22" Margin="0,3,0,0">
            <StatusBar.Resources>
                <Style TargetType="StatusBar" BasedOn="{StaticResource StatusBarStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SessionState}" Value="{x:Static sessions:SessionState.Unsubscribed}">
                            <Setter Property="Background" Value="DodgerBlue"/>
                        </DataTrigger>                        
                        <DataTrigger Binding="{Binding SessionState}" Value="{x:Static sessions:SessionState.Subscribed}">
                            <Setter Property="Background" Value="Chocolate"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSessionActive}" Value="False">
                            <Setter Property="Background" Value="DarkOrchid"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StatusBar.Resources>
            <StatusBarItem>
                <TextBlock Text="{Binding ProjectName}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding SessionName}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" Margin="0" Visibility="{Binding IsSessionActive, Converter={StaticResource BoolToVisibilityConverter}}">
                <ProgressBar Opacity="0.5" Foreground="{StaticResource ButtonBackground}" Width="120" Margin="0" Height="22" Minimum="0" Maximum="1" IsIndeterminate="{Binding IsProgressIndeterminate}" Value="{Binding Progress}"></ProgressBar>
            </StatusBarItem>
        </StatusBar>

    </Grid>
</Window>
